paths:
  /clubs:
    post:
      summary: クラブ作成
      description: 認証済みユーザーが新しいクラブを作成します。
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                  description: クラブ名
                  example: "テストクラブ"
                description:
                  type: string
                  nullable: true
                  description: クラブの説明
                themeImage:
                  type: string
                  format: uri
                  nullable: true
                  description: クラブのテーマ画像
                tags:
                  type: array
                  items:
                    type: string
                  description: クラブのタグリスト
      responses:
        "201":
          description: クラブ作成成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "クラブを作成しました"
                  club:
                    $ref: "../components/schemas.yaml#/schemas/Club"
        "400":
          $ref: "../components/responses.yaml#/responses/ValidationErrorResponse"
        "401":
          $ref: "../components/responses.yaml#/responses/UnauthorizedResponse"

  /clubs/search:
    get:
      summary: クラブ検索
      description: 指定した条件に合うクラブを検索します。
      parameters:
        - name: name
          in: query
          required: false
          schema:
            type: string
          description: 検索するクラブ名
        - name: tags
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          description: 検索するタグリスト
      responses:
        "200":
          description: クラブ検索結果
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "クラブ検索結果"
                  clubs:
                    type: array
                    items:
                      type: string
                    description: クラブIDのリスト

  /clubs/{clubId}:
    get:
      summary: クラブ詳細取得
      description: 指定したクラブの情報を取得します。
      parameters:
        - name: clubId
          in: path
          required: true
          schema:
            type: string
          description: 取得するクラブのID
      responses:
        "200":
          description: クラブ情報取得成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "クラブ情報取得成功"
                  club:
                    $ref: "../components/schemas.yaml#/schemas/Club"
        "404":
          $ref: "../components/responses.yaml#/responses/NotFoundResponse"

    put:
      summary: クラブ情報更新
      description: クラブ管理者がクラブの情報を更新します。
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 更新するクラブ名
                description:
                  type: string
                  nullable: true
                  description: 更新するクラブの説明
                themeImage:
                  type: string
                  format: uri
                  nullable: true
                  description: 更新するクラブのテーマ画像
                tags:
                  type: array
                  items:
                    type: string
                  description: 更新するクラブのタグリスト
      responses:
        "200":
          description: クラブ情報更新成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "クラブ情報を更新しました"
                  club:
                    $ref: "../components/schemas.yaml#/schemas/Club"
        "400":
          $ref: "../components/responses.yaml#/responses/ValidationErrorResponse"
        "401":
          $ref: "../components/responses.yaml#/responses/UnauthorizedResponse"
        "403":
          $ref: "../components/responses.yaml#/responses/ForbiddenResponse"
        "404":
          $ref: "../components/responses.yaml#/responses/NotFoundResponse"

  /clubs/{clubId}/events:
    get:
      summary: クラブのイベント一覧取得
      description: 指定したクラブのイベント一覧を取得します。
      parameters:
        - name: clubId
          in: path
          required: true
          schema:
            type: string
          description: クラブID
      responses:
        "200":
          description: クラブのイベント一覧取得成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "クラブのイベント一覧を取得しました"
                  events:
                    type: array
                    items:
                      type: object
                      properties:
                        eventId:
                          type: string
                          example: "67acae8e88b10f6f1bbf3553"
                        status:
                          type: string
                          example: "upcoming"
        "404":
          $ref: "../components/responses.yaml#/responses/NotFoundResponse"

  /clubs/{clubId}/members:
    get:
      summary: クラブのメンバー取得
      description: 指定したクラブのメンバー一覧を取得します。
      parameters:
        - name: clubId
          in: path
          required: true
          schema:
            type: string
          description: 取得するクラブのID
      responses:
        "200":
          description: クラブのメンバー取得成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "クラブのメンバー一覧"
                  members:
                    type: array
                    items:
                      type: string
                    description: クラブメンバーのユーザーIDリスト
        "404":
          $ref: "../components/responses.yaml#/responses/NotFoundResponse"

  /clubs/{clubId}/join:
    post:
      summary: クラブ参加
      description: ユーザーが指定したクラブに参加します。
      security:
        - bearerAuth: []
      parameters:
        - name: clubId
          in: path
          required: true
          schema:
            type: string
          description: 参加するクラブのID
      responses:
        "200":
          description: クラブ参加成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "クラブに参加しました"
                  club:
                    $ref: "../components/schemas.yaml#/schemas/Club"
        "400":
          $ref: "../components/responses.yaml#/responses/ValidationErrorResponse"
        "401":
          $ref: "../components/responses.yaml#/responses/UnauthorizedResponse"
        "404":
          $ref: "../components/responses.yaml#/responses/NotFoundResponse"
