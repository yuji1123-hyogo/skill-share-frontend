paths:
  /posts:
    post:
      summary: 投稿作成
      description: 新しい投稿を作成します。
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - content
              properties:
                content:
                  type: string
                  description: 投稿内容
                media:
                  type: string
                  format: uri
                  nullable: true
                  description: メディアURL（画像・動画など）
                club:
                  type: string
                  nullable: true
                  description: クラブID（クラブに関連付ける場合）
      responses:
        "201":
          description: 投稿作成成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "投稿を作成しました"
                  post:
                    $ref: "../components/schemas.yaml#/schemas/Post"
        "400":
          $ref: "../components/responses.yaml#/responses/ValidationErrorResponse"
        "401":
          $ref: "../components/responses.yaml#/responses/UnauthorizedResponse"

  /posts/home:
    get:
      summary: ホームフィード取得
      description: ユーザーのフォローしているユーザーの投稿一覧を取得します。
      security:
        - bearerAuth: []
      responses:
        "200":
          description: ホームフィード取得成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "ホームフィードを取得しました"
                  posts:
                    type: array
                    items:
                      $ref: "../components/schemas.yaml#/schemas/Post"
        "401":
          $ref: "../components/responses.yaml#/responses/UnauthorizedResponse"

  /posts/{postId}:
    get:
      summary: 投稿詳細取得
      description: 指定した投稿の詳細情報を取得します。
      parameters:
        - name: postId
          in: path
          required: true
          schema:
            type: string
          description: 取得する投稿のID
      responses:
        "200":
          description: 投稿詳細取得成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "投稿の詳細を取得しました"
                  post:
                    $ref: "../components/schemas.yaml#/schemas/Post"
        "404":
          $ref: "../components/responses.yaml#/responses/NotFoundResponse"

  /posts/users/{userId}:
    get:
      summary: ユーザーの投稿一覧取得
      description: 指定したユーザーの投稿一覧を取得します。
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
          description: 投稿一覧を取得するユーザーID
      responses:
        "200":
          description: ユーザーの投稿一覧取得成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "ユーザーの投稿一覧を取得しました"
                  posts:
                    type: array
                    items:
                      $ref: "../components/schemas.yaml#/schemas/Post"
        "404":
          $ref: "../components/responses.yaml#/responses/NotFoundResponse"

  /posts/clubs/{clubId}:
    get:
      summary: クラブの投稿一覧取得
      description: 指定したクラブの投稿一覧を取得します。
      parameters:
        - name: clubId
          in: path
          required: true
          schema:
            type: string
          description: 投稿一覧を取得するクラブID
      responses:
        "200":
          description: クラブの投稿一覧取得成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "クラブの投稿一覧を取得しました"
                  posts:
                    type: array
                    items:
                      $ref: "../components/schemas.yaml#/schemas/Post"
        "404":
          $ref: "../components/responses.yaml#/responses/NotFoundResponse"
